// Generated by Dagger (https://dagger.dev).
package org.asghari.guardiannews.domain.usecases;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import org.asghari.guardiannews.domain.exceptions.IErrorHandler;
import org.asghari.guardiannews.domain.repositories.GuardianNewsRepository;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LastNewsListUseCase_Factory implements Factory<LastNewsListUseCase> {
  private final Provider<GuardianNewsRepository> guardianNewsRepositoryProvider;

  private final Provider<IErrorHandler> errorHandlerProvider;

  public LastNewsListUseCase_Factory(
      Provider<GuardianNewsRepository> guardianNewsRepositoryProvider,
      Provider<IErrorHandler> errorHandlerProvider) {
    this.guardianNewsRepositoryProvider = guardianNewsRepositoryProvider;
    this.errorHandlerProvider = errorHandlerProvider;
  }

  @Override
  public LastNewsListUseCase get() {
    return newInstance(guardianNewsRepositoryProvider.get(), errorHandlerProvider.get());
  }

  public static LastNewsListUseCase_Factory create(
      Provider<GuardianNewsRepository> guardianNewsRepositoryProvider,
      Provider<IErrorHandler> errorHandlerProvider) {
    return new LastNewsListUseCase_Factory(guardianNewsRepositoryProvider, errorHandlerProvider);
  }

  public static LastNewsListUseCase newInstance(GuardianNewsRepository guardianNewsRepository,
      IErrorHandler errorHandler) {
    return new LastNewsListUseCase(guardianNewsRepository, errorHandler);
  }
}
