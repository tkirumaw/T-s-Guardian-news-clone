// Generated by Dagger (https://dagger.dev).
package org.asghari.guardiannews.presentation.viewmodels;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import org.asghari.guardiannews.domain.usecases.GetSelectedSectionsUseCase;
import org.asghari.guardiannews.domain.usecases.LastNewsListUseCase;
import org.asghari.guardiannews.domain.usecases.SearchInNewsListUseCase;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NewsListViewModel_Factory implements Factory<NewsListViewModel> {
  private final Provider<LastNewsListUseCase> lastNewsListUseCaseProvider;

  private final Provider<SearchInNewsListUseCase> searchInNewsListUseCaseProvider;

  private final Provider<GetSelectedSectionsUseCase> getSelectedSectionsUseCaseProvider;

  public NewsListViewModel_Factory(Provider<LastNewsListUseCase> lastNewsListUseCaseProvider,
      Provider<SearchInNewsListUseCase> searchInNewsListUseCaseProvider,
      Provider<GetSelectedSectionsUseCase> getSelectedSectionsUseCaseProvider) {
    this.lastNewsListUseCaseProvider = lastNewsListUseCaseProvider;
    this.searchInNewsListUseCaseProvider = searchInNewsListUseCaseProvider;
    this.getSelectedSectionsUseCaseProvider = getSelectedSectionsUseCaseProvider;
  }

  @Override
  public NewsListViewModel get() {
    return newInstance(lastNewsListUseCaseProvider.get(), searchInNewsListUseCaseProvider.get(), getSelectedSectionsUseCaseProvider.get());
  }

  public static NewsListViewModel_Factory create(
      Provider<LastNewsListUseCase> lastNewsListUseCaseProvider,
      Provider<SearchInNewsListUseCase> searchInNewsListUseCaseProvider,
      Provider<GetSelectedSectionsUseCase> getSelectedSectionsUseCaseProvider) {
    return new NewsListViewModel_Factory(lastNewsListUseCaseProvider, searchInNewsListUseCaseProvider, getSelectedSectionsUseCaseProvider);
  }

  public static NewsListViewModel newInstance(LastNewsListUseCase lastNewsListUseCase,
      SearchInNewsListUseCase searchInNewsListUseCase,
      GetSelectedSectionsUseCase getSelectedSectionsUseCase) {
    return new NewsListViewModel(lastNewsListUseCase, searchInNewsListUseCase, getSelectedSectionsUseCase);
  }
}
