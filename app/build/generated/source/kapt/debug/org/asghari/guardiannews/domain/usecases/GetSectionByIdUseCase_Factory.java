// Generated by Dagger (https://dagger.dev).
package org.asghari.guardiannews.domain.usecases;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import org.asghari.guardiannews.domain.repositories.SectionsRepository;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetSectionByIdUseCase_Factory implements Factory<GetSectionByIdUseCase> {
  private final Provider<SectionsRepository> sectionsRepositoryProvider;

  public GetSectionByIdUseCase_Factory(Provider<SectionsRepository> sectionsRepositoryProvider) {
    this.sectionsRepositoryProvider = sectionsRepositoryProvider;
  }

  @Override
  public GetSectionByIdUseCase get() {
    return newInstance(sectionsRepositoryProvider.get());
  }

  public static GetSectionByIdUseCase_Factory create(
      Provider<SectionsRepository> sectionsRepositoryProvider) {
    return new GetSectionByIdUseCase_Factory(sectionsRepositoryProvider);
  }

  public static GetSectionByIdUseCase newInstance(SectionsRepository sectionsRepository) {
    return new GetSectionByIdUseCase(sectionsRepository);
  }
}
