// Generated by Dagger (https://dagger.dev).
package org.asghari.guardiannews.presentation.viewmodels;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import org.asghari.guardiannews.domain.usecases.DeleteSectionByIdUsecase;
import org.asghari.guardiannews.domain.usecases.GetAllSectionsUseCase;
import org.asghari.guardiannews.domain.usecases.GetSectionByIdUseCase;
import org.asghari.guardiannews.domain.usecases.GetSelectedSectionsUseCase;
import org.asghari.guardiannews.domain.usecases.SaveSelectedSectionsUseCase;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SectionsViewModel_Factory implements Factory<SectionsViewModel> {
  private final Provider<GetAllSectionsUseCase> getAllSectionsUseCaseProvider;

  private final Provider<GetSectionByIdUseCase> getSectionByIdUseCaseProvider;

  private final Provider<GetSelectedSectionsUseCase> getSelectedSectionsUseCaseProvider;

  private final Provider<SaveSelectedSectionsUseCase> saveSelectedSectionUsecaseProvider;

  private final Provider<DeleteSectionByIdUsecase> deleteSectionByIdUsecaseProvider;

  public SectionsViewModel_Factory(Provider<GetAllSectionsUseCase> getAllSectionsUseCaseProvider,
      Provider<GetSectionByIdUseCase> getSectionByIdUseCaseProvider,
      Provider<GetSelectedSectionsUseCase> getSelectedSectionsUseCaseProvider,
      Provider<SaveSelectedSectionsUseCase> saveSelectedSectionUsecaseProvider,
      Provider<DeleteSectionByIdUsecase> deleteSectionByIdUsecaseProvider) {
    this.getAllSectionsUseCaseProvider = getAllSectionsUseCaseProvider;
    this.getSectionByIdUseCaseProvider = getSectionByIdUseCaseProvider;
    this.getSelectedSectionsUseCaseProvider = getSelectedSectionsUseCaseProvider;
    this.saveSelectedSectionUsecaseProvider = saveSelectedSectionUsecaseProvider;
    this.deleteSectionByIdUsecaseProvider = deleteSectionByIdUsecaseProvider;
  }

  @Override
  public SectionsViewModel get() {
    return newInstance(getAllSectionsUseCaseProvider.get(), getSectionByIdUseCaseProvider.get(), getSelectedSectionsUseCaseProvider.get(), saveSelectedSectionUsecaseProvider.get(), deleteSectionByIdUsecaseProvider.get());
  }

  public static SectionsViewModel_Factory create(
      Provider<GetAllSectionsUseCase> getAllSectionsUseCaseProvider,
      Provider<GetSectionByIdUseCase> getSectionByIdUseCaseProvider,
      Provider<GetSelectedSectionsUseCase> getSelectedSectionsUseCaseProvider,
      Provider<SaveSelectedSectionsUseCase> saveSelectedSectionUsecaseProvider,
      Provider<DeleteSectionByIdUsecase> deleteSectionByIdUsecaseProvider) {
    return new SectionsViewModel_Factory(getAllSectionsUseCaseProvider, getSectionByIdUseCaseProvider, getSelectedSectionsUseCaseProvider, saveSelectedSectionUsecaseProvider, deleteSectionByIdUsecaseProvider);
  }

  public static SectionsViewModel newInstance(GetAllSectionsUseCase getAllSectionsUseCase,
      GetSectionByIdUseCase getSectionByIdUseCase,
      GetSelectedSectionsUseCase getSelectedSectionsUseCase,
      SaveSelectedSectionsUseCase saveSelectedSectionUsecase,
      DeleteSectionByIdUsecase deleteSectionByIdUsecase) {
    return new SectionsViewModel(getAllSectionsUseCase, getSectionByIdUseCase, getSelectedSectionsUseCase, saveSelectedSectionUsecase, deleteSectionByIdUsecase);
  }
}
