// Generated by Dagger (https://dagger.dev).
package org.asghari.guardiannews.data.remote;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import org.asghari.guardiannews.data.remote.apiservices.GuardianNewsApiService;
import org.asghari.guardiannews.data.remote.apiservices.SectionsApiService;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RemoteDataSourceImp_Factory implements Factory<RemoteDataSourceImp> {
  private final Provider<GuardianNewsApiService> guardianNewsApiServiceProvider;

  private final Provider<SectionsApiService> sectionsApiServiceProvider;

  public RemoteDataSourceImp_Factory(
      Provider<GuardianNewsApiService> guardianNewsApiServiceProvider,
      Provider<SectionsApiService> sectionsApiServiceProvider) {
    this.guardianNewsApiServiceProvider = guardianNewsApiServiceProvider;
    this.sectionsApiServiceProvider = sectionsApiServiceProvider;
  }

  @Override
  public RemoteDataSourceImp get() {
    return newInstance(guardianNewsApiServiceProvider.get(), sectionsApiServiceProvider.get());
  }

  public static RemoteDataSourceImp_Factory create(
      Provider<GuardianNewsApiService> guardianNewsApiServiceProvider,
      Provider<SectionsApiService> sectionsApiServiceProvider) {
    return new RemoteDataSourceImp_Factory(guardianNewsApiServiceProvider, sectionsApiServiceProvider);
  }

  public static RemoteDataSourceImp newInstance(GuardianNewsApiService guardianNewsApiService,
      SectionsApiService sectionsApiService) {
    return new RemoteDataSourceImp(guardianNewsApiService, sectionsApiService);
  }
}
